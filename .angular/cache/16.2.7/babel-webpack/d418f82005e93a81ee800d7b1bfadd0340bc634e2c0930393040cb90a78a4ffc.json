{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RecordService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.accessToken = localStorage.getItem('access_token');\n    this.baseURL = \"http://localhost:8082/api/borrowers\";\n  }\n  getRecordList(borrowerId) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.get(`${this.baseURL}/${borrowerId}/records`, {\n      headers\n    });\n  }\n  createRecord(borrowerId, record) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.post(`${this.baseURL}/${borrowerId}/records`, record, {\n      headers\n    });\n  }\n  getRecordById(borrowerId, id) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.get(`${this.baseURL}/${borrowerId}/records/${id}`, {\n      headers\n    });\n  }\n  updateRecord(borrowerId, id, record) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.put(`${this.baseURL}/${borrowerId}/records`, record, {\n      headers\n    });\n  }\n  deleteRecord(borrowerId, id) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.delete(`${this.baseURL}/${borrowerId}/records/${id}`, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function RecordService_Factory(t) {\n    return new (t || RecordService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecordService,\n    factory: RecordService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","RecordService","constructor","httpClient","accessToken","localStorage","getItem","baseURL","getRecordList","borrowerId","headers","get","createRecord","record","post","getRecordById","id","updateRecord","put","deleteRecord","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\record.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Record } from './record.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecordService {\n\n  private readonly accessToken = localStorage.getItem('access_token');\n  private baseURL = \"http://localhost:8082/api/borrowers\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getRecordList(borrowerId: number): Observable<Record[]>{\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.get<Record[]>(`${this.baseURL}/${borrowerId}/records`, { headers });\n  }\n\n  createRecord(borrowerId: number, record: Record): Observable<Object>{\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.post(`${this.baseURL}/${borrowerId}/records`, record, { headers });\n  }\n\n  getRecordById(borrowerId: number, id: number): Observable<Record>{\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.get<Record>(`${this.baseURL}/${borrowerId}/records/${id}`, { headers });\n  }\n\n  updateRecord(borrowerId: number, id: number, record: Record): Observable<Object>{\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.put(`${this.baseURL}/${borrowerId}/records`, record, { headers });\n  }\n\n  deleteRecord(borrowerId: number, id: number): Observable<Object>{\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.accessToken}`\n    });\n    return this.httpClient.delete(`${this.baseURL}/${borrowerId}/records/${id}`, { headers });\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAHb,KAAAC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC3D,KAAAC,OAAO,GAAG,qCAAqC;EAET;EAE9CC,aAAaA,CAACC,UAAkB;IAC9B,MAAMC,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAU,IAAI,CAACI,WAAW;KAC5C,CAAC;IACF,OAAO,IAAI,CAACD,UAAU,CAACQ,GAAG,CAAW,GAAG,IAAI,CAACJ,OAAO,IAAIE,UAAU,UAAU,EAAE;MAAEC;IAAO,CAAE,CAAC;EAC5F;EAEAE,YAAYA,CAACH,UAAkB,EAAEI,MAAc;IAC7C,MAAMH,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAU,IAAI,CAACI,WAAW;KAC5C,CAAC;IACF,OAAO,IAAI,CAACD,UAAU,CAACW,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,IAAIE,UAAU,UAAU,EAAEI,MAAM,EAAE;MAAEH;IAAO,CAAE,CAAC;EAC3F;EAEAK,aAAaA,CAACN,UAAkB,EAAEO,EAAU;IAC1C,MAAMN,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAU,IAAI,CAACI,WAAW;KAC5C,CAAC;IACF,OAAO,IAAI,CAACD,UAAU,CAACQ,GAAG,CAAS,GAAG,IAAI,CAACJ,OAAO,IAAIE,UAAU,YAAYO,EAAE,EAAE,EAAE;MAAEN;IAAO,CAAE,CAAC;EAChG;EAEAO,YAAYA,CAACR,UAAkB,EAAEO,EAAU,EAAEH,MAAc;IACzD,MAAMH,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAU,IAAI,CAACI,WAAW;KAC5C,CAAC;IACF,OAAO,IAAI,CAACD,UAAU,CAACe,GAAG,CAAC,GAAG,IAAI,CAACX,OAAO,IAAIE,UAAU,UAAU,EAAEI,MAAM,EAAE;MAAEH;IAAO,CAAE,CAAC;EAC1F;EAEAS,YAAYA,CAACV,UAAkB,EAAEO,EAAU;IACzC,MAAMN,OAAO,GAAG,IAAIV,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAU,IAAI,CAACI,WAAW;KAC5C,CAAC;IACF,OAAO,IAAI,CAACD,UAAU,CAACiB,MAAM,CAAC,GAAG,IAAI,CAACb,OAAO,IAAIE,UAAU,YAAYO,EAAE,EAAE,EAAE;MAAEN;IAAO,CAAE,CAAC;EAC3F;EAAC,QAAAW,CAAA,G;qBA7CUpB,aAAa,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbzB,aAAa;IAAA0B,OAAA,EAAb1B,aAAa,CAAA2B,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}