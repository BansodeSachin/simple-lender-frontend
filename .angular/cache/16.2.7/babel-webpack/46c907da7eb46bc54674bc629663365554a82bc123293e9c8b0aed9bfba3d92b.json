{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./../services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ChangePasswordComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class ChangePasswordComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n  }\n  login() {\n    this.onSignIn(this.username, this.password);\n    // For simplicity, let's check if the username is 'test' and password is 'password'\n    /*if (this.username === 'test' && this.password === 'password') {\n           // Mocking the receipt of an access token from the server\n      const accessToken = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzdXNhbiIsImlhdCI6MTcwMTkzNTIxNiwiZXhwIjoxNzAyMDIxNjE2fQ.RbHdmv_d_X0yphdHDweNP464RcDmMrcqWKMEjdZtF9cLBZzO4pQP18aGAmBUQyZ-EFFKZFCjHp9cml98e4EisQ';\n      \n      // Storing the access token in localStorage\n      localStorage.setItem('access_token', accessToken);\n           // Redirect to the dashboard on successful login\n      this.router.navigate(['/employees']);\n    } else {\n      this.errorMessage = 'Invalid username or password';\n    }*/\n  }\n\n  onSignIn(username, password) {\n    const success = false;\n    this.authService.signIn(username.trim(), password.trim()).subscribe({\n      next: response => {\n        if (response && response.accessToken) {\n          // Store the token in local storage\n          localStorage.setItem('current_user', JSON.stringify(response));\n          localStorage.setItem('access_token', response.accessToken);\n          // Navigate to the dashboard\n          this.router.navigate(['/employees']);\n        } else this.errorMessage = 'Invalid username or password';\n      },\n      error: error => {\n        console.log(error);\n        this.errorMessage = 'Invalid username or password';\n      },\n      complete: () => console.info('complete')\n    });\n  }\n  home() {\n    // Redirect to the login page after logout\n    this.router.navigate(['/employees']);\n  }\n  logout() {\n    // Clear the access token from localStorage or perform any other logout actions\n    localStorage.removeItem('access_token');\n    // Redirect to the login page after logout\n    this.router.navigate(['/login']);\n  }\n  static #_ = this.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"dashboard-actions\"], [1, \"btn\", \"btn-primary\", 2, \"margin-right\", \"16px\", 3, \"click\"], [1, \"btn\", \"btn-info\", 2, \"margin-right\", \"16px\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 2, \"margin-right\", \"16px\", 3, \"click\"], [1, \"login-container\"], [2, \"text-align\", \"center\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error-message\", 4, \"ngIf\"], [3, \"click\"], [1, \"error-message\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_1_listener() {\n          return ctx.home();\n        });\n        i0.ɵɵtext(2, \"Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_3_listener() {\n          return ctx.changePassword();\n        });\n        i0.ɵɵtext(4, \"Change Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_5_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(6, \"Logout\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 4)(8, \"h2\", 5);\n        i0.ɵɵtext(9, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 9);\n        i0.ɵɵtext(16, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(18, ChangePasswordComponent_div_18_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementStart(19, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_19_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(20, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","ChangePasswordComponent","constructor","router","authService","username","password","login","onSignIn","success","signIn","trim","subscribe","next","response","accessToken","localStorage","setItem","JSON","stringify","navigate","error","console","log","complete","info","home","logout","removeItem","_","ɵɵdirectiveInject","i1","Router","i2","AuthService","_2","selectors","decls","vars","consts","template","ChangePasswordComponent_Template","rf","ctx","ɵɵlistener","ChangePasswordComponent_Template_button_click_1_listener","ChangePasswordComponent_Template_button_click_3_listener","changePassword","ChangePasswordComponent_Template_button_click_5_listener","ChangePasswordComponent_Template_input_ngModelChange_13_listener","$event","ChangePasswordComponent_Template_input_ngModelChange_17_listener","ɵɵtemplate","ChangePasswordComponent_div_18_Template","ChangePasswordComponent_Template_button_click_19_listener","ɵɵproperty"],"sources":["C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\change-password\\change-password.component.ts","C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\change-password\\change-password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './../services/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent {\n\n  public username: string = '';\n  public password: string = '';\n  public errorMessage: string = '';\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  login(): void {\n\n    this.onSignIn(this.username, this.password);\n\n    // For simplicity, let's check if the username is 'test' and password is 'password'\n    /*if (this.username === 'test' && this.password === 'password') {\n\n      // Mocking the receipt of an access token from the server\n      const accessToken = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzdXNhbiIsImlhdCI6MTcwMTkzNTIxNiwiZXhwIjoxNzAyMDIxNjE2fQ.RbHdmv_d_X0yphdHDweNP464RcDmMrcqWKMEjdZtF9cLBZzO4pQP18aGAmBUQyZ-EFFKZFCjHp9cml98e4EisQ';\n      \n      // Storing the access token in localStorage\n      localStorage.setItem('access_token', accessToken);\n\n      // Redirect to the dashboard on successful login\n      this.router.navigate(['/employees']);\n    } else {\n      this.errorMessage = 'Invalid username or password';\n    }*/\n  }\n\n\n  onSignIn(username: string, password: string): void {\n    const success = false;\n\n    this.authService.signIn(username.trim(), password.trim()).subscribe({\n      next: response => {\n        if (response && response.accessToken) {\n          // Store the token in local storage\n          localStorage.setItem('current_user', JSON.stringify(response));\n          localStorage.setItem('access_token', response.accessToken);\n          // Navigate to the dashboard\n          this.router.navigate(['/employees']);\n        } else\n          this.errorMessage = 'Invalid username or password';\n      }, error: error => {\n        console.log(error);\n        this.errorMessage = 'Invalid username or password';\n      },\n      complete: () => console.info('complete')\n    });\n    \n  }\n\n\n  home(): void {\n    // Redirect to the login page after logout\n    this.router.navigate(['/employees']);\n  }\n\n  logout(): void {\n    // Clear the access token from localStorage or perform any other logout actions\n    localStorage.removeItem('access_token');\n\n    // Redirect to the login page after logout\n    this.router.navigate(['/login']);\n  }\n\n}\n","<div class=\"dashboard-actions\">\n    <button class=\"btn btn-primary\" style=\"margin-right:16px\" (click)=\"home()\">Home</button> \n    <button class=\"btn btn-info\" style=\"margin-right:16px\" (click)=\"changePassword()\">Change Password</button>\n    <button class=\"btn btn-danger\" style=\"margin-right:16px\" (click)=\"logout()\">Logout</button>\n  </div>\n<!-- login.component.html -->\n<div class=\"login-container\">\n    <h2 style=\"text-align: center;\">Login</h2>\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" />\n    </div>\n    <div class=\"error-message\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\n    <button (click)=\"login()\">Login</button>\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}