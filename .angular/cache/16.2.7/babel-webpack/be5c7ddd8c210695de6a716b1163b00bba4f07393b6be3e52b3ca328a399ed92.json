{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n  }\n  login() {\n    // For simplicity, let's check if the username is 'test' and password is 'password'\n    if (this.username === 'test' && this.password === 'password') {\n      // Mocking the receipt of an access token from the server\n      const accessToken = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzdXNhbiIsImlhdCI6MTcwMTkzNTIxNiwiZXhwIjoxNzAyMDIxNjE2fQ.RbHdmv_d_X0yphdHDweNP464RcDmMrcqWKMEjdZtF9cLBZzO4pQP18aGAmBUQyZ-EFFKZFCjHp9cml98e4EisQ';\n      // Storing the access token in localStorage\n      localStorage.setItem('access_token', accessToken);\n      // Redirect to the dashboard on successful login\n      this.router.navigate(['/employees']);\n    } else {\n      this.errorMessage = 'Invalid username or password';\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[1, \"login-container\"], [2, \"text-align\", \"center\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error-message\", 4, \"ngIf\"], [3, \"click\"], [1, \"error-message\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"Username:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"label\", 5);\n        i0.ɵɵtext(9, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(13, \"Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"\\n\\n.login-container[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: auto;\\n    margin-top: 50px;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 8px;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n    background-color: #fff;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  label[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n    display: block;\\n    margin-bottom: 8px;\\n  }\\n  \\n  input[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    font-size: 16px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n  }\\n  \\n  .error-message[_ngcontent-%COMP%] {\\n    color: #ff3333;\\n    margin-bottom: 15px;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 12px;\\n    background-color: #4caf50;\\n    color: white;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    font-size: 16px;\\n  }\\n  \\n  button[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7QUFDeEI7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQix3Q0FBd0M7SUFDeEMsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLGVBQWU7SUFDZixzQkFBc0I7SUFDdEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsY0FBYztJQUNkLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLyogbG9naW4uY29tcG9uZW50LmNzcyAqL1xyXG4ubG9naW4tY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgXHJcbiAgLmZvcm0tZ3JvdXAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgbGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5lcnJvci1tZXNzYWdlIHtcclxuICAgIGNvbG9yOiAjZmYzMzMzO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTJweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgfVxyXG4gIFxyXG4gIGJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDVhMDQ5O1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","router","username","password","login","accessToken","localStorage","setItem","navigate","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_input_ngModelChange_6_listener","$event","LoginComponent_Template_input_ngModelChange_10_listener","ɵɵtemplate","LoginComponent_div_11_Template","LoginComponent_Template_button_click_12_listener","ɵɵproperty"],"sources":["C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\login\\login.component.ts","C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  public username: string = '';\n  public password: string = '';\n  public errorMessage: string = '';\n\n  constructor(private router: Router) {}\n\n  login(): void {\n    // For simplicity, let's check if the username is 'test' and password is 'password'\n    if (this.username === 'test' && this.password === 'password') {\n\n      // Mocking the receipt of an access token from the server\n      const accessToken = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzdXNhbiIsImlhdCI6MTcwMTkzNTIxNiwiZXhwIjoxNzAyMDIxNjE2fQ.RbHdmv_d_X0yphdHDweNP464RcDmMrcqWKMEjdZtF9cLBZzO4pQP18aGAmBUQyZ-EFFKZFCjHp9cml98e4EisQ';\n      \n      // Storing the access token in localStorage\n      localStorage.setItem('access_token', accessToken);\n\n      // Redirect to the dashboard on successful login\n      this.router.navigate(['/employees']);\n    } else {\n      this.errorMessage = 'Invalid username or password';\n    }\n  }\n}\n","<!-- login.component.html -->\n<div class=\"login-container\">\n    <h2 style=\"text-align: center;\">Login</h2>\n    <div class=\"form-group\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" />\n    </div>\n    <div class=\"error-message\" *ngIf=\"errorMessage\">{{ errorMessage }}</div>\n    <button (click)=\"login()\">Login</button>\n  </div>"],"mappings":";;;;;;ICWIA,EAAA,CAAAC,cAAA,aAAgD;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAAxBH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,YAAA,CAAkB;;;ADHtE,OAAM,MAAOC,cAAc;EAKzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAJnB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAL,YAAY,GAAW,EAAE;EAEK;EAErCM,KAAKA,CAAA;IACH;IACA,IAAI,IAAI,CAACF,QAAQ,KAAK,MAAM,IAAI,IAAI,CAACC,QAAQ,KAAK,UAAU,EAAE;MAE5D;MACA,MAAME,WAAW,GAAG,gLAAgL;MAEpM;MACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,WAAW,CAAC;MAEjD;MACA,IAAI,CAACJ,MAAM,CAACO,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;KACrC,MAAM;MACL,IAAI,CAACV,YAAY,GAAG,8BAA8B;;EAEtD;EAAC,QAAAW,CAAA,G;qBAtBUV,cAAc,EAAAR,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdd,cAAc;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCP3B7B,EAAA,CAAAC,cAAA,aAA6B;QACOD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC1CH,EAAA,CAAAC,cAAA,aAAwB;QACAD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvCH,EAAA,CAAAC,cAAA,eAA0D;QAAzBD,EAAA,CAAA+B,UAAA,2BAAAC,uDAAAC,MAAA;UAAA,OAAAH,GAAA,CAAAnB,QAAA,GAAAsB,MAAA;QAAA,EAAsB;QAAvDjC,EAAA,CAAAG,YAAA,EAA0D;QAE5DH,EAAA,CAAAC,cAAA,aAAwB;QACAD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACvCH,EAAA,CAAAC,cAAA,gBAA8D;QAAzBD,EAAA,CAAA+B,UAAA,2BAAAG,wDAAAD,MAAA;UAAA,OAAAH,GAAA,CAAAlB,QAAA,GAAAqB,MAAA;QAAA,EAAsB;QAA3DjC,EAAA,CAAAG,YAAA,EAA8D;QAEhEH,EAAA,CAAAmC,UAAA,KAAAC,8BAAA,iBAAwE;QACxEpC,EAAA,CAAAC,cAAA,iBAA0B;QAAlBD,EAAA,CAAA+B,UAAA,mBAAAM,iDAAA;UAAA,OAASP,GAAA,CAAAjB,KAAA,EAAO;QAAA,EAAC;QAACb,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAPLH,EAAA,CAAAI,SAAA,GAAsB;QAAtBJ,EAAA,CAAAsC,UAAA,YAAAR,GAAA,CAAAnB,QAAA,CAAsB;QAIlBX,EAAA,CAAAI,SAAA,GAAsB;QAAtBJ,EAAA,CAAAsC,UAAA,YAAAR,GAAA,CAAAlB,QAAA,CAAsB;QAEjCZ,EAAA,CAAAI,SAAA,GAAkB;QAAlBJ,EAAA,CAAAsC,UAAA,SAAAR,GAAA,CAAAvB,YAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}