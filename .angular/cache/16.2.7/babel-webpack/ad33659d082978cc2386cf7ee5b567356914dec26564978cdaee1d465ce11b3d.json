{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RecordDetailsComponent = class RecordDetailsComponent {\n  constructor(route, borrowerService, recordService, router) {\n    this.route = route;\n    this.borrowerService = borrowerService;\n    this.recordService = recordService;\n    this.router = router;\n    this.currentUser = JSON.parse(localStorage.getItem('current_user') || \"\").username;\n  }\n  home() {\n    // Redirect to the login page after logout\n    this.router.navigate(['/dashboard']);\n  }\n  logout() {\n    // Clear the access token from localStorage or perform any other logout actions\n    localStorage.removeItem('access_token');\n    // Redirect to the login page after logout\n    this.router.navigate(['/login']);\n  }\n  changePassword() {\n    // Implement the logic for changing the password\n    console.log('Change Password clicked');\n    this.router.navigate(['/change-password']);\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.borrower = new Borrower();\n    this.borrowerService.getBorrowerById(this.id).subscribe(data => {\n      this.borrower = data;\n    });\n    this.getRecords(this.borrower.id);\n  }\n  getRecords(borrowerId) {\n    this.recordService.getRecordList(borrowerId).subscribe(data => {\n      this.records = data;\n    });\n  }\n  recordDetails(id) {\n    this.router.navigate(['record-details', id]);\n  }\n  addRecord(borrowerId) {\n    this.router.navigate(['create-record', borrowerId]);\n  }\n  updateRecord(id) {\n    this.router.navigate(['update-record', id]);\n  }\n  deleteRecord(id) {\n    this.recordService.deleteRecord(this.borrower.id, id).subscribe(data => {\n      console.log(data);\n      this.getRecords(this.borrower.id);\n    });\n    window.location.reload();\n  }\n};\nRecordDetailsComponent = __decorate([Component({\n  selector: 'app-record-details',\n  templateUrl: './record-details.component.html',\n  styleUrls: ['./record-details.component.css']\n})], RecordDetailsComponent);","map":{"version":3,"names":["Component","RecordDetailsComponent","constructor","route","borrowerService","recordService","router","currentUser","JSON","parse","localStorage","getItem","username","home","navigate","logout","removeItem","changePassword","console","log","ngOnInit","id","snapshot","params","borrower","Borrower","getBorrowerById","subscribe","data","getRecords","borrowerId","getRecordList","records","recordDetails","addRecord","updateRecord","deleteRecord","window","location","reload","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\record-details\\record-details.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-record-details',\n  templateUrl: './record-details.component.html',\n  styleUrls: ['./record-details.component.css']\n})\nexport class RecordDetailsComponent {\n\n  id!: number\n  record!: Record\n  transactions!: Transaction[];\n\n  currentUser: string = JSON.parse(localStorage.getItem('current_user') || \"\").username;\n\n  constructor(private route: ActivatedRoute, private borrowerService: BorrowerService,\n    private recordService: RecordService, private router: Router) { }\n\n  home(): void {\n    // Redirect to the login page after logout\n    this.router.navigate(['/dashboard']);\n  }\n\n  logout(): void {\n    // Clear the access token from localStorage or perform any other logout actions\n    localStorage.removeItem('access_token');\n\n    // Redirect to the login page after logout\n    this.router.navigate(['/login']);\n  }\n\n  changePassword(): void {\n    // Implement the logic for changing the password\n    console.log('Change Password clicked');\n    this.router.navigate(['/change-password']);\n  }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.borrower = new Borrower();\n    this.borrowerService.getBorrowerById(this.id).subscribe( data => {\n      this.borrower = data;\n    });\n\n    this.getRecords(this.borrower.id);\n  }\n\n  private getRecords(borrowerId: number) {\n    this.recordService.getRecordList(borrowerId).subscribe(data => {\n      this.records = data;\n    });\n  }\n\n  recordDetails(id: number){\n    this.router.navigate(['record-details', id]);\n  }\n\n  addRecord(borrowerId: number){\n    this.router.navigate(['create-record', borrowerId]);\n  }\n\n  updateRecord(id: number){\n    this.router.navigate(['update-record', id]);\n  }\n\n  deleteRecord(id: number){\n    this.recordService.deleteRecord(this.borrower.id, id).subscribe( data => {\n      console.log(data);\n      this.getRecords(this.borrower.id);\n    })\n    window.location.reload();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQjCC,YAAoBC,KAAqB,EAAUC,eAAgC,EACzEC,aAA4B,EAAUC,MAAc;IAD1C,KAAAH,KAAK,GAALA,KAAK;IAA0B,KAAAC,eAAe,GAAfA,eAAe;IACxD,KAAAC,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAHtD,KAAAC,WAAW,GAAWC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAACC,QAAQ;EAGnB;EAElEC,IAAIA,CAAA;IACF;IACA,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAEAC,MAAMA,CAAA;IACJ;IACAL,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;IAEvC;IACA,IAAI,CAACV,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAG,cAAcA,CAAA;IACZ;IACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAI,CAACb,MAAM,CAACQ,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAC5C;EAEAM,QAAQA,CAAA;IACN,IAAI,CAACC,EAAE,GAAG,IAAI,CAAClB,KAAK,CAACmB,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAE1C,IAAI,CAACC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC9B,IAAI,CAACrB,eAAe,CAACsB,eAAe,CAAC,IAAI,CAACL,EAAE,CAAC,CAACM,SAAS,CAAEC,IAAI,IAAG;MAC9D,IAAI,CAACJ,QAAQ,GAAGI,IAAI;IACtB,CAAC,CAAC;IAEF,IAAI,CAACC,UAAU,CAAC,IAAI,CAACL,QAAQ,CAACH,EAAE,CAAC;EACnC;EAEQQ,UAAUA,CAACC,UAAkB;IACnC,IAAI,CAACzB,aAAa,CAAC0B,aAAa,CAACD,UAAU,CAAC,CAACH,SAAS,CAACC,IAAI,IAAG;MAC5D,IAAI,CAACI,OAAO,GAAGJ,IAAI;IACrB,CAAC,CAAC;EACJ;EAEAK,aAAaA,CAACZ,EAAU;IACtB,IAAI,CAACf,MAAM,CAACQ,QAAQ,CAAC,CAAC,gBAAgB,EAAEO,EAAE,CAAC,CAAC;EAC9C;EAEAa,SAASA,CAACJ,UAAkB;IAC1B,IAAI,CAACxB,MAAM,CAACQ,QAAQ,CAAC,CAAC,eAAe,EAAEgB,UAAU,CAAC,CAAC;EACrD;EAEAK,YAAYA,CAACd,EAAU;IACrB,IAAI,CAACf,MAAM,CAACQ,QAAQ,CAAC,CAAC,eAAe,EAAEO,EAAE,CAAC,CAAC;EAC7C;EAEAe,YAAYA,CAACf,EAAU;IACrB,IAAI,CAAChB,aAAa,CAAC+B,YAAY,CAAC,IAAI,CAACZ,QAAQ,CAACH,EAAE,EAAEA,EAAE,CAAC,CAACM,SAAS,CAAEC,IAAI,IAAG;MACtEV,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC;MACjB,IAAI,CAACC,UAAU,CAAC,IAAI,CAACL,QAAQ,CAACH,EAAE,CAAC;IACnC,CAAC,CAAC;IACFgB,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;CACD;AAlEYtC,sBAAsB,GAAAuC,UAAA,EALlCxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW1C,sBAAsB,CAkElC"},"metadata":{},"sourceType":"module","externalDependencies":[]}