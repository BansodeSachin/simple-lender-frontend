{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BorrowerListComponent = class BorrowerListComponent {\n  constructor(borrowerService, router) {\n    this.borrowerService = borrowerService;\n    this.router = router;\n    this.currentUser = JSON.parse(localStorage.getItem('current_user') || \"\").username;\n  }\n  home() {\n    // Redirect to the login page after logout\n    this.router.navigate(['/dashboard']);\n  }\n  logout() {\n    // Clear the access token from localStorage or perform any other logout actions\n    localStorage.removeItem('access_token');\n    // Redirect to the login page after logout\n    this.router.navigate(['/login']);\n  }\n  changePassword() {\n    // Implement the logic for changing the password\n    console.log('Change Password clicked');\n    this.router.navigate(['/change-password']);\n  }\n  ngOnInit() {\n    this.getEmployees();\n    this.getBorrowers();\n    // Fetch data or calculate totals from your service\n    this.calculateTotals();\n  }\n  getEmployees() {\n    this.employeeService.getEmployeeList().subscribe(data => {\n      this.employees = data;\n    });\n  }\n  getBorrowers() {\n    this.borrowerService.getBorrowerList().subscribe(data => {\n      this.borrowers = data;\n    });\n  }\n  borrowerDetails(id) {\n    this.router.navigate(['borrower-details', id]);\n  }\n  addBorrower() {\n    this.router.navigate(['create-borrower']);\n  }\n  updateBorrower(id) {\n    this.router.navigate(['update-borrower', id]);\n  }\n  deleteBorrower(id) {\n    this.borrowerService.deleteBorrower(id).subscribe(data => {\n      console.log(data);\n      this.getBorrowers();\n    });\n    window.location.reload();\n  }\n};\nBorrowerListComponent = __decorate([Component({\n  selector: 'app-borrower-list',\n  templateUrl: './borrower-list.component.html',\n  styleUrls: ['./borrower-list.component.css']\n})], BorrowerListComponent);","map":{"version":3,"names":["Component","BorrowerListComponent","constructor","borrowerService","router","currentUser","JSON","parse","localStorage","getItem","username","home","navigate","logout","removeItem","changePassword","console","log","ngOnInit","getEmployees","getBorrowers","calculateTotals","employeeService","getEmployeeList","subscribe","data","employees","getBorrowerList","borrowers","borrowerDetails","id","addBorrower","updateBorrower","deleteBorrower","window","location","reload","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\borrower-list\\borrower-list.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\nimport { Router } from '@angular/router';\nimport { Borrower } from '../borrower.model';\n\n@Component({\n  selector: 'app-borrower-list',\n  templateUrl: './borrower-list.component.html',\n  styleUrls: ['./borrower-list.component.css']\n})\nexport class BorrowerListComponent {\n\n  borrowers!: Borrower[];\n\n  currentUser: string = JSON.parse(localStorage.getItem('current_user') || \"\").username;\n\n  constructor(private borrowerService: BorrowerService,\n    private router: Router) {\n\n  }\n\n  home(): void {\n    // Redirect to the login page after logout\n    this.router.navigate(['/dashboard']);\n  }\n\n  logout(): void {\n    // Clear the access token from localStorage or perform any other logout actions\n    localStorage.removeItem('access_token');\n\n    // Redirect to the login page after logout\n    this.router.navigate(['/login']);\n  }\n\n  changePassword(): void {\n    // Implement the logic for changing the password\n    console.log('Change Password clicked');\n    this.router.navigate(['/change-password']);\n  }\n\n  ngOnInit(): void {\n    this.getEmployees();\n    this.getBorrowers();\n    // Fetch data or calculate totals from your service\n    this.calculateTotals();\n  }\n\n  private getEmployees() {\n    this.employeeService.getEmployeeList().subscribe(data => {\n      this.employees = data;\n    });\n  }\n\n  private getBorrowers() {\n    this.borrowerService.getBorrowerList().subscribe(data => {\n      this.borrowers = data;\n    });\n  }\n\n  borrowerDetails(id: number){\n    this.router.navigate(['borrower-details', id]);\n  }\n\n  addBorrower(){\n    this.router.navigate(['create-borrower']);\n  }\n\n  updateBorrower(id: number){\n    this.router.navigate(['update-borrower', id]);\n  }\n\n  deleteBorrower(id: number){\n    this.borrowerService.deleteBorrower(id).subscribe( data => {\n      console.log(data);\n      this.getBorrowers();\n    })\n    window.location.reload();\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAMhCC,YAAoBC,eAAgC,EAC1CC,MAAc;IADJ,KAAAD,eAAe,GAAfA,eAAe;IACzB,KAAAC,MAAM,GAANA,MAAM;IAHhB,KAAAC,WAAW,GAAWC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAACC,QAAQ;EAKrF;EAEAC,IAAIA,CAAA;IACF;IACA,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACtC;EAEAC,MAAMA,CAAA;IACJ;IACAL,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;IAEvC;IACA,IAAI,CAACV,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAG,cAAcA,CAAA;IACZ;IACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAI,CAACb,MAAM,CAACQ,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAC5C;EAEAM,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACC,YAAY,EAAE;IACnB;IACA,IAAI,CAACC,eAAe,EAAE;EACxB;EAEQF,YAAYA,CAAA;IAClB,IAAI,CAACG,eAAe,CAACC,eAAe,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MACtD,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;EACJ;EAEQL,YAAYA,CAAA;IAClB,IAAI,CAACjB,eAAe,CAACwB,eAAe,EAAE,CAACH,SAAS,CAACC,IAAI,IAAG;MACtD,IAAI,CAACG,SAAS,GAAGH,IAAI;IACvB,CAAC,CAAC;EACJ;EAEAI,eAAeA,CAACC,EAAU;IACxB,IAAI,CAAC1B,MAAM,CAACQ,QAAQ,CAAC,CAAC,kBAAkB,EAAEkB,EAAE,CAAC,CAAC;EAChD;EAEAC,WAAWA,CAAA;IACT,IAAI,CAAC3B,MAAM,CAACQ,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC3C;EAEAoB,cAAcA,CAACF,EAAU;IACvB,IAAI,CAAC1B,MAAM,CAACQ,QAAQ,CAAC,CAAC,iBAAiB,EAAEkB,EAAE,CAAC,CAAC;EAC/C;EAEAG,cAAcA,CAACH,EAAU;IACvB,IAAI,CAAC3B,eAAe,CAAC8B,cAAc,CAACH,EAAE,CAAC,CAACN,SAAS,CAAEC,IAAI,IAAG;MACxDT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;MACjB,IAAI,CAACL,YAAY,EAAE;IACrB,CAAC,CAAC;IACFc,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;CAED;AArEYnC,qBAAqB,GAAAoC,UAAA,EALjCrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWvC,qBAAqB,CAqEjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}