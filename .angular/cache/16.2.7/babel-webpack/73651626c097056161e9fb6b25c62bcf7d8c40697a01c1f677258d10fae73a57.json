{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.errorMessage = '';\n  }\n  login() {\n    // For simplicity, let's check if the username is 'test' and password is 'password'\n    if (this.username === 'test' && this.password === 'password') {\n      // Mocking the receipt of an access token from the server\n      const accessToken = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzdXNhbiIsImlhdCI6MTcwMTkzNTIxNiwiZXhwIjoxNzAyMDIxNjE2fQ.RbHdmv_d_X0yphdHDweNP464RcDmMrcqWKMEjdZtF9cLBZzO4pQP18aGAmBUQyZ-EFFKZFCjHp9cml98e4EisQ';\n      // Storing the access token in localStorage\n      localStorage.setItem('access_token', accessToken);\n      // Redirect to the dashboard on successful login\n      this.router.navigate(['/employees']);\n    } else {\n      this.errorMessage = 'Invalid username or password';\n    }\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 2,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n\\n.login-container[_ngcontent-%COMP%] {\\n    max-width: 300px;\\n    margin: auto;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    margin-top: 50px;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n  }\\n  \\n  .error-message[_ngcontent-%COMP%] {\\n    color: red;\\n    margin-bottom: 15px;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    background-color: #4caf50;\\n    color: white;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  \\n\\n  .dashboard-container[_ngcontent-%COMP%] {\\n    max-width: 600px;\\n    margin: auto;\\n    margin-top: 50px;\\n  }\\n  \\n  \\n\\n  [_nghost-%COMP%] {\\n    display: block;\\n    text-align: center;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0I7QUFDeEI7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFVBQVU7SUFDVixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakI7O0VBRUEsNEJBQTRCO0VBQzVCO0lBQ0UsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixnQkFBZ0I7RUFDbEI7O0VBRUEsc0JBQXNCO0VBQ3RCO0lBQ0UsY0FBYztJQUNkLGtCQUFrQjtFQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIGxvZ2luLmNvbXBvbmVudC5jc3MgKi9cclxuLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIH1cclxuICBcclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICAuZXJyb3ItbWVzc2FnZSB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGNhZjUwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAvKiBkYXNoYm9hcmQuY29tcG9uZW50LmNzcyAqL1xyXG4gIC5kYXNoYm9hcmQtY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIH1cclxuICBcclxuICAvKiBhcHAuY29tcG9uZW50LmNzcyAqL1xyXG4gIDpob3N0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","router","username","password","errorMessage","login","accessToken","localStorage","setItem","navigate","_","i0","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\login\\login.component.ts","C:\\Users\\MSUSERSL123\\Desktop\\New Notes\\Angular-Spring Boot Project\\angular-frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  public username: string = '';\n  public password: string = '';\n  public errorMessage: string = '';\n\n  constructor(private router: Router) {}\n\n  login(): void {\n    // For simplicity, let's check if the username is 'test' and password is 'password'\n    if (this.username === 'test' && this.password === 'password') {\n\n      // Mocking the receipt of an access token from the server\n      const accessToken = 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJzdXNhbiIsImlhdCI6MTcwMTkzNTIxNiwiZXhwIjoxNzAyMDIxNjE2fQ.RbHdmv_d_X0yphdHDweNP464RcDmMrcqWKMEjdZtF9cLBZzO4pQP18aGAmBUQyZ-EFFKZFCjHp9cml98e4EisQ';\n      \n      // Storing the access token in localStorage\n      localStorage.setItem('access_token', accessToken);\n\n      // Redirect to the dashboard on successful login\n      this.router.navigate(['/employees']);\n    } else {\n      this.errorMessage = 'Invalid username or password';\n    }\n  }\n}\n","<p>login works!</p>\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAJnB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAW,EAAE;EAEK;EAErCC,KAAKA,CAAA;IACH;IACA,IAAI,IAAI,CAACH,QAAQ,KAAK,MAAM,IAAI,IAAI,CAACC,QAAQ,KAAK,UAAU,EAAE;MAE5D;MACA,MAAMG,WAAW,GAAG,gLAAgL;MAEpM;MACAC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,WAAW,CAAC;MAEjD;MACA,IAAI,CAACL,MAAM,CAACQ,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;KACrC,MAAM;MACL,IAAI,CAACL,YAAY,GAAG,8BAA8B;;EAEtD;EAAC,QAAAM,CAAA,G;qBAtBUX,cAAc,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdhB,cAAc;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR3BV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,mBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}